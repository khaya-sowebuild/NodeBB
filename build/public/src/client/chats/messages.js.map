{"version":3,"sources":["public/src/client/chats/messages.js"],"names":["define","components","sounds","translator","Benchpress","messages","sendMessage","roomId","inputEl","msg","val","mid","attr","length","removeAttr","updateRemainingLength","parent","$","window","trigger","message","socket","emit","err","app","showEmailConfirmWarning","alert","alert_id","title","type","timeout","play","alertError","element","find","text","config","maximumChatMessageLength","appendChatMessage","chatContentEl","data","lastSpeaker","parseInt","last","lasttimestamp","Array","isArray","newSet","fromuid","timestamp","parseMessage","html","onMessagesParsed","newMessage","appendTo","timeago","addClass","scrollToBottom","messageEl","callback","parse","translate","containerEl","scrollTop","scrollHeight","height","prepEdit","messageId","raw","onChatMessageEdit","on","forEach","self","user","uid","body","get","replaceWith","delete","translated","bootbox","confirm","ok","toggleClass","restore"],"mappings":"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","file":"public/src/client/chats/messages.js","sourcesContent":["'use strict';\r\n\r\n\r\ndefine('forum/chats/messages', ['components', 'sounds', 'translator', 'benchpress'], function (components, sounds, translator, Benchpress) {\r\n\tvar messages = {};\r\n\r\n\tmessages.sendMessage = function (roomId, inputEl) {\r\n\t\tvar msg = inputEl.val();\r\n\t\tvar mid = inputEl.attr('data-mid');\r\n\r\n\t\tif (!msg.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tinputEl.val('');\r\n\t\tinputEl.removeAttr('data-mid');\r\n\t\tmessages.updateRemainingLength(inputEl.parent());\r\n\t\t$(window).trigger('action:chat.sent', {\r\n\t\t\troomId: roomId,\r\n\t\t\tmessage: msg,\r\n\t\t\tmid: mid,\r\n\t\t});\r\n\r\n\t\tif (!mid) {\r\n\t\t\tsocket.emit('modules.chats.send', {\r\n\t\t\t\troomId: roomId,\r\n\t\t\t\tmessage: msg,\r\n\t\t\t}, function (err) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tinputEl.val(msg);\r\n\t\t\t\t\tmessages.updateRemainingLength(inputEl.parent());\r\n\t\t\t\t\tif (err.message === '[[error:email-not-confirmed-chat]]') {\r\n\t\t\t\t\t\treturn app.showEmailConfirmWarning(err);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn app.alert({\r\n\t\t\t\t\t\talert_id: 'chat_spam_error',\r\n\t\t\t\t\t\ttitle: '[[global:alert.error]]',\r\n\t\t\t\t\t\tmessage: err.message,\r\n\t\t\t\t\t\ttype: 'danger',\r\n\t\t\t\t\t\ttimeout: 10000,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsounds.play('chat-outgoing');\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsocket.emit('modules.chats.edit', {\r\n\t\t\t\troomId: roomId,\r\n\t\t\t\tmid: mid,\r\n\t\t\t\tmessage: msg,\r\n\t\t\t}, function (err) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tinputEl.val(msg);\r\n\t\t\t\t\tinputEl.attr('data-mid', mid);\r\n\t\t\t\t\tmessages.updateRemainingLength(inputEl.parent());\r\n\t\t\t\t\treturn app.alertError(err.message);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tmessages.updateRemainingLength = function (parent) {\r\n\t\tvar element = parent.find('[component=\"chat/input\"]');\r\n\t\tparent.find('[component=\"chat/message/length\"]').text(element.val().length);\r\n\t\tparent.find('[component=\"chat/message/remaining\"]').text(config.maximumChatMessageLength - element.val().length);\r\n\t};\r\n\r\n\tmessages.appendChatMessage = function (chatContentEl, data) {\r\n\t\tvar lastSpeaker = parseInt(chatContentEl.find('.chat-message').last().attr('data-uid'), 10);\r\n\t\tvar lasttimestamp = parseInt(chatContentEl.find('.chat-message').last().attr('data-timestamp'), 10);\r\n\t\tif (!Array.isArray(data)) {\r\n\t\t\tdata.newSet = lastSpeaker !== parseInt(data.fromuid, 10) ||\r\n\t\t\t\tparseInt(data.timestamp, 10) > parseInt(lasttimestamp, 10) + (1000 * 60 * 3);\r\n\t\t}\r\n\r\n\t\tmessages.parseMessage(data, function (html) {\r\n\t\t\tonMessagesParsed(chatContentEl, html);\r\n\t\t});\r\n\t};\r\n\r\n\tfunction onMessagesParsed(chatContentEl, html) {\r\n\t\tvar newMessage = $(html);\r\n\r\n\t\tnewMessage.appendTo(chatContentEl);\r\n\t\tnewMessage.find('.timeago').timeago();\r\n\t\tnewMessage.find('img:not(.not-responsive)').addClass('img-responsive');\r\n\t\tmessages.scrollToBottom(chatContentEl);\r\n\r\n\t\t$(window).trigger('action:chat.received', {\r\n\t\t\tmessageEl: newMessage,\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tmessages.parseMessage = function (data, callback) {\r\n\t\tBenchpress.parse('partials/chats/message' + (Array.isArray(data) ? 's' : ''), {\r\n\t\t\tmessages: data,\r\n\t\t}, function (html) {\r\n\t\t\ttranslator.translate(html, callback);\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tmessages.scrollToBottom = function (containerEl) {\r\n\t\tif (containerEl.length) {\r\n\t\t\tcontainerEl.scrollTop(containerEl[0].scrollHeight - containerEl.height());\r\n\t\t}\r\n\t};\r\n\r\n\tmessages.prepEdit = function (inputEl, messageId, roomId) {\r\n\t\tsocket.emit('modules.chats.getRaw', { mid: messageId, roomId: roomId }, function (err, raw) {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn app.alertError(err.message);\r\n\t\t\t}\r\n\t\t\t// Populate the input field with the raw message content\r\n\t\t\tif (inputEl.val().length === 0) {\r\n\t\t\t\t// By setting the `data-mid` attribute, I tell the chat code that I am editing a\r\n\t\t\t\t// message, instead of posting a new one.\r\n\t\t\t\tinputEl.attr('data-mid', messageId).addClass('editing');\r\n\t\t\t\tinputEl.val(raw);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tmessages.onChatMessageEdit = function () {\r\n\t\tsocket.on('event:chats.edit', function (data) {\r\n\t\t\tdata.messages.forEach(function (message) {\r\n\t\t\t\tvar self = parseInt(message.fromuid, 10) === parseInt(app.user.uid, 10);\r\n\t\t\t\tmessage.self = self ? 1 : 0;\r\n\t\t\t\tmessages.parseMessage(message, function (html) {\r\n\t\t\t\t\tvar body = components.get('chat/message', message.messageId);\r\n\t\t\t\t\tif (body.length) {\r\n\t\t\t\t\t\tbody.replaceWith(html);\r\n\t\t\t\t\t\tcomponents.get('chat/message', message.messageId).find('.timeago').timeago();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tmessages.delete = function (messageId, roomId) {\r\n\t\ttranslator.translate('[[modules:chat.delete_message_confirm]]', function (translated) {\r\n\t\t\tbootbox.confirm(translated, function (ok) {\r\n\t\t\t\tif (!ok) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsocket.emit('modules.chats.delete', {\r\n\t\t\t\t\tmessageId: messageId,\r\n\t\t\t\t\troomId: roomId,\r\n\t\t\t\t}, function (err) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn app.alertError(err.message);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcomponents.get('chat/message', messageId).toggleClass('deleted', true);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tmessages.restore = function (messageId, roomId) {\r\n\t\tsocket.emit('modules.chats.restore', {\r\n\t\t\tmessageId: messageId,\r\n\t\t\troomId: roomId,\r\n\t\t}, function (err) {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn app.alertError(err.message);\r\n\t\t\t}\r\n\r\n\t\t\tcomponents.get('chat/message', messageId).toggleClass('deleted', false);\r\n\t\t});\r\n\t};\r\n\r\n\treturn messages;\r\n});\r\n"]}