{"version":3,"sources":["node_modules/nodebb-plugin-composer-default/static/lib/composer/controls.js"],"names":["define","preview","controls","insertIntoTextarea","textarea","value","$textarea","$","currentVal","val","postContainer","parents","slice","selectionStart","render","wrapSelectionInTextareaWith","leading","trailing","undefined","matches","exec","selectionEnd","length","updateTextareaSelection","start","end","setSelectionRange","focus","getBlockData","textareaEl","query","replace","regex","RegExp","match","matchIndices","payload","split","reduce","memo","line","push","index","in","cur","atEnd"],"mappings":"AAAA,aAIAA,OAAO,qBAAsB,oBAAqB,SAASC,GAC1D,IAAIC,KAKJA,EAASC,mBAAqB,SAASC,EAAUC,GAChD,IAAIC,EAAYC,EAAEH,GAClB,IAAII,EAAaF,EAAUG,MAC3B,IAAIC,EAAgBJ,EAAUK,QAAQ,0BAEtCL,EAAUG,IACTD,EAAWI,MAAM,EAAGR,EAASS,gBAC7BR,EACAG,EAAWI,MAAMR,EAASS,iBAG3BZ,EAAQa,OAAOJ,IAGhBR,EAASa,4BAA8B,SAASX,EAAUY,EAASC,GAClE,GAAIA,IAAaC,UAAW,CAC3BD,EAAWD,EAGZ,IAAIV,EAAYC,EAAEH,GAClB,IAAII,EAAaF,EAAUG,MAE3B,IAAIU,EAAU,yBAAyBC,KAAKZ,EAAWI,MAAMR,EAASS,eAAgBT,EAASiB,eAE/F,IAAKF,EAAQ,GAAI,CAEhBA,GAAW,KAAM,GAAIX,EAAWI,MAAMR,EAASS,eAAgBT,EAASiB,cAAe,IAGxFf,EAAUG,IACTD,EAAWI,MAAM,EAAGR,EAASS,gBAC7BM,EAAQ,GACRH,EACAG,EAAQ,GACRF,EACAE,EAAQ,GACRX,EAAWI,MAAMR,EAASiB,eAG3B,OAAQF,EAAQ,GAAGG,OAAQH,EAAQ,GAAGG,SAGvCpB,EAASqB,wBAA0B,SAASnB,EAAUoB,EAAOC,GAC5DrB,EAASsB,kBAAkBF,EAAOC,GAClClB,EAAEH,GAAUuB,SAGbzB,EAAS0B,aAAe,SAAUC,EAAYC,EAAOjB,GAEpD,IAAIR,EAAQwB,EAAWxB,MACvByB,EAAQA,EAAMC,QAAQ,sCAAuC,QAC7D,IAAIC,EAAQ,IAAIC,OAAOH,EAAO,KAC9B,IAAII,EACJ,IAAIC,KACJ,IAAIC,EAGJ/B,EAAQA,EAAMgC,MAAM,MAAMC,OAAO,SAAUC,EAAMC,GAChD,GAAID,IAAS,KAAM,CAClB,OAAOA,EAGRA,EAAO1B,GAAkB2B,EAAKlB,OAASkB,EAAO,KAE9C,GAAID,IAAS,KAAM,CAClB1B,EAAiBA,GAAkB2B,EAAKlB,OAAS,GAGlD,OAAOiB,GACL,MAGH,OAAOL,EAAQF,EAAMZ,KAAKf,MAAY,KAAM,CAC3C8B,EAAaM,KAAKP,EAAMQ,OAGzBN,GACCO,MAAOR,EAAaG,OAAO,SAAUC,EAAMK,GAC1C,GAAI/B,GAAkB+B,EAAM,EAAG,CAC9BL,GAAQ,EAGT,OAAOA,GACL,GAAK,GACRM,MAAOV,EAAaG,OAAO,SAAUC,EAAMK,GAC1C,GAAIL,EAAM,CACT,OAAOA,EAGR,OAAO1B,IAAmB+B,GACxB,QAGJR,EAAQS,MAAQT,EAAQO,GAAKP,EAAQS,MAAQ,MAC7C,OAAOT,GAGR,OAAOlC","file":"node_modules/nodebb-plugin-composer-default/static/lib/composer/controls.js","sourcesContent":["\"use strict\";\r\n\r\n/*global define*/\r\n\r\ndefine('composer/controls', ['composer/preview'], function(preview) {\r\n\tvar controls = {};\r\n\r\n\t/*************************************************/\r\n\t/* Rich Textarea Controls                        */\r\n\t/*************************************************/\r\n\tcontrols.insertIntoTextarea = function(textarea, value) {\r\n\t\tvar $textarea = $(textarea);\r\n\t\tvar currentVal = $textarea.val();\r\n\t\tvar postContainer = $textarea.parents('[component=\"composer\"]');\r\n\r\n\t\t$textarea.val(\r\n\t\t\tcurrentVal.slice(0, textarea.selectionStart) +\r\n\t\t\tvalue +\r\n\t\t\tcurrentVal.slice(textarea.selectionStart)\r\n\t\t);\r\n\r\n\t\tpreview.render(postContainer);\r\n\t};\r\n\r\n\tcontrols.wrapSelectionInTextareaWith = function(textarea, leading, trailing){\r\n\t\tif (trailing === undefined) {\r\n\t\t\ttrailing = leading;\r\n\t\t}\r\n\r\n\t\tvar $textarea = $(textarea);\r\n\t\tvar currentVal = $textarea.val();\r\n\r\n\t\tvar matches = /^(\\s*)([\\s\\S]*?)(\\s*)$/.exec(currentVal.slice(textarea.selectionStart, textarea.selectionEnd));\r\n\r\n\t\tif (!matches[2]) {\r\n\t\t\t// selection is entirely whitespace\r\n\t\t\tmatches = [null, '', currentVal.slice(textarea.selectionStart, textarea.selectionEnd), ''];\r\n\t\t}\r\n\r\n\t\t$textarea.val(\r\n\t\t\tcurrentVal.slice(0, textarea.selectionStart) +\r\n\t\t\tmatches[1] +\r\n\t\t\tleading +\r\n\t\t\tmatches[2] +\r\n\t\t\ttrailing +\r\n\t\t\tmatches[3] +\r\n\t\t\tcurrentVal.slice(textarea.selectionEnd)\r\n\t\t);\r\n\r\n\t\treturn [matches[1].length, matches[3].length];\r\n\t};\r\n\r\n\tcontrols.updateTextareaSelection = function(textarea, start, end){\r\n\t\ttextarea.setSelectionRange(start, end);\r\n\t\t$(textarea).focus();\r\n\t};\r\n\r\n\tcontrols.getBlockData = function (textareaEl, query, selectionStart) {\r\n\t\t// Determines whether the cursor is sitting inside a block-type element (bold, italic, etc.)\r\n\t\tvar value = textareaEl.value;\r\n\t\tquery = query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n\t\tvar regex = new RegExp(query, 'g');\r\n\t\tvar match;\r\n\t\tvar matchIndices = [];\r\n\t\tvar payload;\r\n\r\n\t\t// Isolate the line the cursor is on\r\n\t\tvalue = value.split('\\n').reduce(function (memo, line) {\r\n\t\t\tif (memo !== null) {\r\n\t\t\t\treturn memo;\r\n\t\t\t}\r\n\r\n\t\t\tmemo = selectionStart <= line.length ? line : null;\r\n\r\n\t\t\tif (memo === null) {\r\n\t\t\t\tselectionStart = selectionStart - (line.length + 1);\r\n\t\t\t}\r\n\r\n\t\t\treturn memo;\r\n\t\t}, null);\r\n\r\n\t\t// Find query characters and determine return payload\r\n\t\twhile((match = regex.exec(value)) !== null) {\r\n\t\t\tmatchIndices.push(match.index);\r\n\t\t}\r\n\r\n\t\tpayload = {\r\n\t\t\tin: !!(matchIndices.reduce(function (memo, cur) {\r\n\t\t\t\tif (selectionStart >= cur + 2) {\r\n\t\t\t\t\tmemo += 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn memo;\r\n\t\t\t}, 0) % 2),\r\n\t\t\tatEnd: matchIndices.reduce(function (memo, cur) {\r\n\t\t\t\tif (memo) {\r\n\t\t\t\t\treturn memo;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn selectionStart === cur;\r\n\t\t\t}, false),\r\n\t\t}\r\n\r\n\t\tpayload.atEnd = payload.in ? payload.atEnd : false;\r\n\t\treturn payload;\r\n\t}\r\n\r\n\treturn controls;\r\n});\r\n"]}